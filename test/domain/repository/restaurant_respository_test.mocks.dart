// Mocks generated by Mockito 5.4.4 from annotations
// in restaurant_tour/test/domain/repository/restaurant_respository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant_tour/domain/datasource/favorite_restaurants_datasource.dart'
    as _i5;
import 'package:restaurant_tour/domain/datasource/restaurants_datasource.dart'
    as _i2;
import 'package:restaurant_tour/models/restaurant.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RestaurantsDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestaurantsDatasource extends _i1.Mock
    implements _i2.RestaurantsDatasource {
  @override
  _i3.Future<List<_i4.Restaurant>> getRestaurants({
    int? offset,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRestaurants,
          [],
          {
            #offset: offset,
            #limit: limit,
          },
        ),
        returnValue: _i3.Future<List<_i4.Restaurant>>.value(<_i4.Restaurant>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.Restaurant>>.value(<_i4.Restaurant>[]),
      ) as _i3.Future<List<_i4.Restaurant>>);
}

/// A class which mocks [FavoriteRestaurantsDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteRestaurantsDatasource extends _i1.Mock
    implements _i5.FavoriteRestaurantsDatasource {
  @override
  _i3.Future<void> addFavoriteRestaurant(_i4.Restaurant? restaurant) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavoriteRestaurant,
          [restaurant],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeFavoriteRestaurant(_i4.Restaurant? restaurant) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFavoriteRestaurant,
          [restaurant],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Restaurant>> getFavoritesRestaurants() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavoritesRestaurants,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Restaurant>>.value(<_i4.Restaurant>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.Restaurant>>.value(<_i4.Restaurant>[]),
      ) as _i3.Future<List<_i4.Restaurant>>);
}
